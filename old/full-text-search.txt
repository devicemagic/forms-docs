Full text search
==================

Heroku recommends using Solr for full text search.  You have two options, running your own Solr server on any internet-connected server, or using the [Websolr add-on](http://addons.heroku.com/websolr).

Websolr
-------

[Websolr](http://addons.heroku.com/websolr) is a managed search service run by [Onemorecloud](http://www.onemorecloud.com/). The Heroku Websolr add-on provides complete integration: all you need to do is install the add-on and use the `websolr-acts_as_solr` or `websolr-sunspot_rails` gem from your app.

Solr
----

For large datasets, you can run a Solr server on your own EC2 instance (ideal for minimizing latency), or on any internet-connected server.  Steps to set up Solr:

* Install the Java runtime environment.  On Debian or Ubuntu this can be done with: apt-get install sun-java6-jre
* `git clone git://github.com/mattmatt/acts_as_solr.git`
* `cd acts_as_solr/solr && java -jar start.jar`

The server will now be running on port 8983.  Test it with a web client, such as: curl localhost:8983, which should produce a 404.

Then to set up a Rails app to access it:

* `script/plugin install git://github.com/mattmatt/acts_as_solr.git`
* Add acts_as_solr to the model.  Specify which fields you want to index - otherwise it will try to index everything, which may cause problems with date fields.  For example: `acts_as_solr :fields => [ :title, :body ]`
* Edit `config/solr.yml` and set production to use the IP of your Solr server and port 8983.
* Deploy your app to Heroku with git push.
* Run `heroku rake solr:reindex` to generate the index for any existing records in your database.
* Try it out with something like: `heroku console "Post.find_by_solr('some text')"`

Further reading: [http://www.quarkruby.com/2007/8/12/acts_as_solr-for-search-and-faceting](http://www.quarkruby.com/2007/8/12/acts_as_solr-for-search-and-faceting)
