Apigee for Twitter
===========
Apigee makes working with APIs better, especially the Twitter API. By accessing the Twitter API through Apigee, you can receive significantly improved Twitter API rate limits when using OAuth authentication. This removes a major barrier for developers building Twitter applications - with the Apigee add-on, you can now handle more requests and traffic than ever before and build a better app. In upcoming versions, you will also be able to get Apigee's full Analytics and Debugging features to see API performance metrics, understand usage, view requests and responses and dig into errors.
 
Add-on Installation
-------------------
To use (add-on) on Heroku, install the Apigee add-on:

    $ heroku addons:add apigee

Local setup
-----------
Activating the add-on will create two private Twitter API endpoints for you as configvars. To use Apigee, simply make any normal request to api.twitter.com or search.twitter.com, but instead use the configvar _APIGEE_TWITTER_API_ENDPOINT_ in place of api.twitter.com and _APIGEE_TWITTER_SEARCH_API_ENDPOINT_ in place of search.twitter.com. 

Using OAuth with Apigee
-----------
In order to use OAuth with Apigee, there are two important steps to keep in mind:

1. All API requests are made through Apigee, **except for the OAuth dance**
2. API requests must be signed as if they are going directly to Twitter (using _http://api.twitter.com_ in the base string) but then sent through your Apigee endpoint.

After you activate the add-on, Apigee will create a private endpoint for your API requests. You can continue to request user tokens as you have before, and likewise, you would continue to build the base string with _http://api.twitter.com_ . But instead of sending those requests directly to _http://api.twitter.com_ , you instead send them to your configvar, e.g. _http://APIGEE_TWITTER_API_ENDPOINT_ instead.

Note: several gems have been reported to support the use of proxies with the Twitter API:
* [Twitter OAuth](http://rubygems.org/gems/twitter_oauth)
* [Twitter Gem](http://rubygems.org/gems/twitter)
* [OAuth-Ruby](http://oauth.rubyforge.org/)

A Note on Search
-----------
While Twitter's search methods at one time were available at api.twitter.com, those are [no longer supported](http://groups.google.com/group/twitter-development-talk/browse_thread/thread/1966cd34ad06574). Be sure to use the Apigee provided configvar for search to make all your search requests.

Additional Resources
-----------
* [Notes](http://gist.github.com/421561) on configuring your local development environment (example uses the REST API endpoint√≥adjust for your Facebook configvar; you may wish to configure the search endpoint in a similar fashion).
* [Apigee.com](http://apigee.com)
* [Support community](http://support.apigee.com)
* Apigee is designed to be a [highly available service](http://apigee.com/blog_detail/on_availability)