# Panda

Panda is a powerful video encoding solution which makes it easy to add video uploading and encoding to your app. 

We provide an [jQuery uploader](http://www.pandastream.com/docs/uploading_video) that embeds into your application's page and sends the video directly to Panda, an encoder that converts it to any format you like, and a REST API to let you manage videos. 

## Prerequisites

Panda uses [Amazon S3 buckets](http://aws.amazon.com/s3/) to store encoded videos. Before you can use the add-on, you'll need your Amazon Access Key ID and Amazon Secret Key. You can find these in the [Security Credentials section](http://aws-portal.amazon.com/gp/aws/developer/account/index.html?action=access-key) of your Amazon account. If you don't have one, you can [sign up for an S3 account](http://aws.amazon.com/s3/).

This guide assumes that you're using Rails, although Panda will still work with other Heroku-deployable applications. 

## Overview

* Add the Heroku Add-on
* Install the gem
* Install the plugin
* Configure video storage
* Setup configuration for local server
* Test that it's all working
* Integrate with your application

## Add the Heroku Add-on

To install the free version of the Panda add-on, simply run:

    $ heroku addons:add pandastream:free
    Adding pandastream:free to myapp... done

You can also do this from the Resources section of your application's configuration page on Heroku. 

Running this command will set the Heroku configuration variable PANDASTREAM_URL. You can see it by typing `heroku config --long`. 

Note that the free plan allows you to upload and encode an unlimited number of videos. However the filesize of uploads must be less than 10Mb. For production usage there a several [paid plans available](http://addons.heroku.com/panda) with no upload limit and dedicated encoders. 

## Install the gem 

Add the Panda gem to your `config/environment.rb` so that it will be loaded:

    config.gem "panda", :version => ">= 1.0.0", :source => "http://gemcutter.org"

Next install it with:

    $ rake gems:install

You'll also want to add it to your Heroku gem manifest file:

    $ echo 'panda' >> .gems
    
Finally, create the file `config/initializers/panda.rb` with the line below so that your application connects to Panda when it starts:

    Panda.configure(ENV['PANDASTREAM_URL'])

## Install the plugin

This plugin adds the `panda:setup_bucket` command to the heroku command line tool so you can setup Panda with your S3 credentials:

    $ heroku plugins:install http://github.com/newbamboo/heroku-panda.git
    heroku-panda installed

## Configure Panda

Before using Panda in your application, you need to let Panda know where to save encoded videos. We recommend that you create a new bucket to use with Panda.

In the line below, replace `S3_BUCKET`, `S3_KEY` and `S3_SECRET` with your values:

    heroku panda:setup_bucket 'S3_BUCKET' 'S3_KEY' 'S3_SECRET'
    Successful: The bucket permission is setup correctly.

Panda will use the `S3_KEY` and `S3_SECRET` that you provide only to grant itself access to your bucket. It will not store them.

## Setup locally (optional)

`ENV['PANDASTREAM_URL']` isn't set locally by default. By copying the connection information `config/environments/development.rb` you will be able to use your Heroku Panda account in development mode locally.

    $ heroku config --long
    PANDASTREAM_URL => http://ksid490e-85eb-11df-b41e-12313b082ce2:8x7+v85WsWz1Jgqzlz5+g1zR9P2ex78wg1l61jag@api.pandastream.com:80/927a9d9xk37ded62422d4613229c156f
    
Copy the connection url to `config/environments/development.rb`:

    ENV['PANDASTREAM_URL'] = "http://ksid490e-85eb-11df-b41e-12313b082ce2:8x7+v85WsWz1Jgqzlz5+g1zR9P2ex78wg1l61jag@api.pandastream.com:80/927a9d9xk37ded62422d4613229c156f"

## Test that it's all working

Fire up a console:

    $ script/console

Or if you've committed and pushed your changes to Heroku you can login to the production console: 

    $ heroku console
    
The initializer should connect you to Panda automatically, so you're ready to upload a sample video. You can use any URL; this is the URL of a sample we've made available:

    >> video = Panda::Video.create(:source_url => "http://panda-test-harness-videos.s3.amazonaws.com/panda.mp4")

Or use a local file:

    >> video = Panda::Video.create(:file => File.new("/home/me/panda.mp4"))

Now wait until the video has finished encoding (which could be several minutes depending on the size). You can check by doing:

    >> video.reload
    >> video.status
    => "success"

Now you can get the URL of a re-encoded version:

    >> video.encodings.first.url
    => http://s3.amazonaws.com/S3_BUCKET/e40c1f68fbc1c4db46.mp4

Open this URL in your browser, and you'll see that Panda has received, re-encoded, and stored your video into your S3 bucket.

Everything's working nicely. Time to integrate with your application!

## Integration with your Rails app

Now you have successfully setup the Panda Heroku add-on, you're ready to integrate Panda with your application. A step-by-step guide is available here: [Integrating Panda with your Ruby on Rails application](http://pandastream.com/docs/integrate_with_rails#implementing_video_uploads_into_your_application).

To learn more about what is possible with The Panda gem have a peek at [the docs](http://www.pandastream.com/docs/panda_gem).

Panda encodes to a basic mp4 format by default, but you can set up Encoding Profiles to output whichever format you like. Since you're using Heroku, you don't have a direct login to do this from the Panda control panel, but you can [Configure Encoding Profiles Using the API](http://pandastream.com/docs/encoding_profiles).

The Panda gem handles the API interactions for you, but if you want to get closer to the metal, you can read the [API documentation](http://pandastream.com/docs/api).