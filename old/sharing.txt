Collaborating with others
=========================

## Adding collaborators to an app

Other developers can be invited to collaborate on your app, identified by email
address:

    :::term
    $ heroku sharing:add joe@example.com
    joe@example.com added as a full collaborator on myapp.

The user is sent an email immediately to let them know they were granted access
to the app. If no existing Heroku account matches the email specified, an
invitation email is sent. They can access the app's code immediately after
signing up.  Collaborators only have access to the app git repository.  They can not change resources.

## Accessing an app when you've been added as a collaborator

When someone grants you access to an app, you will receive an email with
the app name and some other information to help you get.

    :::term
    $ heroku info theirapp
    === theirapp
    Web URL:        http://theirapp.heroku.com/
    Git Repo:       git@heroku.com:theirapp.git
    Repo size:      960k
    Slug size:      512k
    Data size:      88k in 3 tables
    Collaborators:  owner@example.com
                    joe@example.com

Use the Git Repo URL to clone the app locally:

    :::term
    $ git clone -o heroku git@heroku.com:theirapp.git
    $ cd theirapp

You can now use `git push heroku` to deploy local changes and `git pull heroku`
to merge any changes deployed by other collaborators.

## Viewing an app's collaborator list

Use the `heroku info` command to see the list of current collaborators:

    :::term
    $ heroku info
    ...
    Collaborators:  adam@example.com
                    joe@example.com

## Revoking access to an app

You can revoke a collaborator's access using the `heroku sharing:remove` command:

    :::term
    $ heroku sharing:remove joe@example.com
    Collaborator removed.

Once access has been revoked, the user is no longer able to deploy changes or
modify the app's configuration.

## Merging code changes

Once you're collaborating with other developers, you may find that you're prevented from pushing to the repo with a message like this:

    :::term
    $ git push heroku
    error: remote 'refs/heads/master' is not a strict subset of local ref 'refs/heads/master'.
    maybe you are not up-to-date and need to pull first?

This means that other developers have pushed up changes that you need to pull down and merge with your local repository.  "git pull" is the quick way to do this; see the section titled "Pulling code" for details.
